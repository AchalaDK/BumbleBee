
package services;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.5
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AdminService", targetNamespace = "http://Services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AdminService {


    /**
     * 
     * @param fulName
     * @param password
     * @param dob
     * @param name
     * @param customerId
     * @param maxLoan
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateInformation", targetNamespace = "http://Services/", className = "services.UpdateInformation")
    @Action(input = "http://Services/AdminService/updateInformation")
    public void updateInformation(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "fulName", targetNamespace = "")
        String fulName,
        @WebParam(name = "dob", targetNamespace = "")
        String dob,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "customerId", targetNamespace = "")
        int customerId,
        @WebParam(name = "maxLoan", targetNamespace = "")
        double maxLoan);

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "loginAdmin", targetNamespace = "http://Services/", className = "services.LoginAdmin")
    @ResponseWrapper(localName = "loginAdminResponse", targetNamespace = "http://Services/", className = "services.LoginAdminResponse")
    @Action(input = "http://Services/AdminService/loginAdminRequest", output = "http://Services/AdminService/loginAdminResponse")
    public boolean loginAdmin(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param productId
     * @param price
     * @param name
     * @param count
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateProduct", targetNamespace = "http://Services/", className = "services.UpdateProduct")
    @Action(input = "http://Services/AdminService/updateProduct")
    public void updateProduct(
        @WebParam(name = "productId", targetNamespace = "")
        int productId,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "price", targetNamespace = "")
        double price,
        @WebParam(name = "count", targetNamespace = "")
        int count);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllCustomers", targetNamespace = "http://Services/", className = "services.GetAllCustomers")
    @ResponseWrapper(localName = "getAllCustomersResponse", targetNamespace = "http://Services/", className = "services.GetAllCustomersResponse")
    @Action(input = "http://Services/AdminService/getAllCustomersRequest", output = "http://Services/AdminService/getAllCustomersResponse")
    public String getAllCustomers();

    /**
     * 
     * @param price
     * @param name
     * @param count
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addProduct", targetNamespace = "http://Services/", className = "services.AddProduct")
    @ResponseWrapper(localName = "addProductResponse", targetNamespace = "http://Services/", className = "services.AddProductResponse")
    @Action(input = "http://Services/AdminService/addProductRequest", output = "http://Services/AdminService/addProductResponse")
    public int addProduct(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "price", targetNamespace = "")
        double price,
        @WebParam(name = "count", targetNamespace = "")
        int count);

    /**
     * 
     * @return
     *     returns java.util.List<services.Product>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllProducts", targetNamespace = "http://Services/", className = "services.GetAllProducts")
    @ResponseWrapper(localName = "getAllProductsResponse", targetNamespace = "http://Services/", className = "services.GetAllProductsResponse")
    @Action(input = "http://Services/AdminService/getAllProductsRequest", output = "http://Services/AdminService/getAllProductsResponse")
    public List<Product> getAllProducts();

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://Services/", className = "services.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://Services/", className = "services.HelloResponse")
    @Action(input = "http://Services/AdminService/helloRequest", output = "http://Services/AdminService/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param customerId
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCustomerById", targetNamespace = "http://Services/", className = "services.GetCustomerById")
    @ResponseWrapper(localName = "getCustomerByIdResponse", targetNamespace = "http://Services/", className = "services.GetCustomerByIdResponse")
    @Action(input = "http://Services/AdminService/getCustomerByIdRequest", output = "http://Services/AdminService/getCustomerByIdResponse")
    public String getCustomerById(
        @WebParam(name = "customerId", targetNamespace = "")
        int customerId);

    /**
     * 
     * @param productId
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProductById", targetNamespace = "http://Services/", className = "services.GetProductById")
    @ResponseWrapper(localName = "getProductByIdResponse", targetNamespace = "http://Services/", className = "services.GetProductByIdResponse")
    @Action(input = "http://Services/AdminService/getProductByIdRequest", output = "http://Services/AdminService/getProductByIdResponse")
    public String getProductById(
        @WebParam(name = "productId", targetNamespace = "")
        int productId);

    /**
     * 
     * @param productId
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteProductById", targetNamespace = "http://Services/", className = "services.DeleteProductById")
    @ResponseWrapper(localName = "deleteProductByIdResponse", targetNamespace = "http://Services/", className = "services.DeleteProductByIdResponse")
    @Action(input = "http://Services/AdminService/deleteProductByIdRequest", output = "http://Services/AdminService/deleteProductByIdResponse")
    public boolean deleteProductById(
        @WebParam(name = "productId", targetNamespace = "")
        int productId);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllProductsJson", targetNamespace = "http://Services/", className = "services.GetAllProductsJson")
    @ResponseWrapper(localName = "getAllProductsJsonResponse", targetNamespace = "http://Services/", className = "services.GetAllProductsJsonResponse")
    @Action(input = "http://Services/AdminService/getAllProductsJsonRequest", output = "http://Services/AdminService/getAllProductsJsonResponse")
    public String getAllProductsJson();

}
