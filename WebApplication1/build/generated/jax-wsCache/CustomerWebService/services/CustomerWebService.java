
package services;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.5
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CustomerWebService", targetNamespace = "http://Services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CustomerWebService {


    /**
     * 
     * @param fulName
     * @param password
     * @param dob
     * @param name
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateInformation", targetNamespace = "http://Services/", className = "services.UpdateInformation")
    @Action(input = "http://Services/CustomerWebService/updateInformation")
    public void updateInformation(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "fulName", targetNamespace = "")
        String fulName,
        @WebParam(name = "dob", targetNamespace = "")
        String dob,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param loanId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPaidInstallments", targetNamespace = "http://Services/", className = "services.GetPaidInstallments")
    @ResponseWrapper(localName = "getPaidInstallmentsResponse", targetNamespace = "http://Services/", className = "services.GetPaidInstallmentsResponse")
    @Action(input = "http://Services/CustomerWebService/getPaidInstallmentsRequest", output = "http://Services/CustomerWebService/getPaidInstallmentsResponse")
    public int getPaidInstallments(
        @WebParam(name = "loanId", targetNamespace = "")
        int loanId);

    /**
     * 
     * @return
     *     returns java.util.List<services.Product>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllProducts", targetNamespace = "http://Services/", className = "services.GetAllProducts")
    @ResponseWrapper(localName = "getAllProductsResponse", targetNamespace = "http://Services/", className = "services.GetAllProductsResponse")
    @Action(input = "http://Services/CustomerWebService/getAllProductsRequest", output = "http://Services/CustomerWebService/getAllProductsResponse")
    public List<Product> getAllProducts();

    /**
     * 
     * @param productId
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLoan", targetNamespace = "http://Services/", className = "services.GetLoan")
    @ResponseWrapper(localName = "getLoanResponse", targetNamespace = "http://Services/", className = "services.GetLoanResponse")
    @Action(input = "http://Services/CustomerWebService/getLoanRequest", output = "http://Services/CustomerWebService/getLoanResponse")
    public boolean getLoan(
        @WebParam(name = "productId", targetNamespace = "")
        int productId);

    /**
     * 
     * @return
     *     returns java.util.List<services.Loan>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUnpaidLoans", targetNamespace = "http://Services/", className = "services.GetUnpaidLoans")
    @ResponseWrapper(localName = "getUnpaidLoansResponse", targetNamespace = "http://Services/", className = "services.GetUnpaidLoansResponse")
    @Action(input = "http://Services/CustomerWebService/getUnpaidLoansRequest", output = "http://Services/CustomerWebService/getUnpaidLoansResponse")
    public List<Loan> getUnpaidLoans();

    /**
     * 
     * @param password
     * @param email
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "loginCustomer", targetNamespace = "http://Services/", className = "services.LoginCustomer")
    @ResponseWrapper(localName = "loginCustomerResponse", targetNamespace = "http://Services/", className = "services.LoginCustomerResponse")
    @Action(input = "http://Services/CustomerWebService/loginCustomerRequest", output = "http://Services/CustomerWebService/loginCustomerResponse")
    public boolean loginCustomer(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @return
     *     returns java.util.List<services.Loan>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllLoans", targetNamespace = "http://Services/", className = "services.GetAllLoans")
    @ResponseWrapper(localName = "getAllLoansResponse", targetNamespace = "http://Services/", className = "services.GetAllLoansResponse")
    @Action(input = "http://Services/CustomerWebService/getAllLoansRequest", output = "http://Services/CustomerWebService/getAllLoansResponse")
    public List<Loan> getAllLoans();

    /**
     * 
     * @param loanId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "payLoan", targetNamespace = "http://Services/", className = "services.PayLoan")
    @Action(input = "http://Services/CustomerWebService/payLoan")
    public void payLoan(
        @WebParam(name = "loanId", targetNamespace = "")
        int loanId);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllProductsJson", targetNamespace = "http://Services/", className = "services.GetAllProductsJson")
    @ResponseWrapper(localName = "getAllProductsJsonResponse", targetNamespace = "http://Services/", className = "services.GetAllProductsJsonResponse")
    @Action(input = "http://Services/CustomerWebService/getAllProductsJsonRequest", output = "http://Services/CustomerWebService/getAllProductsJsonResponse")
    public String getAllProductsJson();

}
